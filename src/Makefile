GIT      = git
CC       = gcc
LD       = $(CC)
CPPFLAGS = -MD
CFLAGS   = -Wall -O0 -g
LDFLAGS  = 

OBJECTS = main.o child_info.o child_mem.o syscall.o path.o execve.o notice.o ureg.o interp.o

all: proot

######################################################################
# Beautified output

Q = @

######################################################################
# Auto-configuration

DEFAULT_VERSION = v0.6.1+

config.h:
	@echo "generate $@"
	$(Q)echo "/* This files is auto-generated by Makefile, do not edit. */" > $@
	$(Q)echo "#ifndef CONFIG_H" >> $@
	$(Q)echo "#define CONFIG_H" >> $@
	$(Q)sh -c 'VERSION=$$($(GIT) describe --tags --dirty --abbrev=8 --always 2>/dev/null); \
		echo "#define VERSION $${VERSION-$(DEFAULT_VERSION)}" >> $@'
	$(Q)sh -c 'echo -e "#include <stdlib.h>\nint main(void) { return readlinkat(0, NULL, NULL, 0); }" > conftest.c; \
		$(CC) conftest.c -o /dev/null 2>/dev/null; \
		if [ $$? -eq 0 ]; then \
			echo "#define HAVE_READLINKAT" >> $@; \
		fi; \
		rm conftest.c'
	$(Q)echo "#endif /* CONFIG_H */" >> $@


######################################################################
# Dependancies

proot: $(OBJECTS)
	$(LD) $(LDFLAGS) $^ -o $@

DEPS = $(patsubst %.o, %.d, $(OBJECTS))
-include $(DEPS)

$(OBJECTS) config.h: Makefile
$(OBJECTS): config.h

######################################################################
# PHONY targets

.PHONY: clean
clean:
	rm -f $(OBJECTS) $(DEPS) config.h conftest.c proot
